version: 2.1
orbs:
  slack: circleci/slack@4.1.3
jobs:
  node:
    working_directory: ~/project
    environment:
      GIT_COMMIT_MSG: git log --format=oneline -n 1 | sed -E 's/^[^ ]+ (.*)$/\1/g'
    docker:
      - image: cimg/node:12.16

    steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: jest tests
          command: |
            mkdir -p test-results/jest
            yarn run test
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

      # - run: 
      #     name: Source bash env
      #     command: |
      #       export GIT_COMMIT_DESC=$(git log --format=oneline -n 1 | sed -E 's/^[^ ]+ (.*)$/\1/g')
      - slack/notify:
          event: always
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "\n"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "âœ… JS build passed. Uploading an apk. Hold on for 2-3 minutes :pray:"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "\n"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "plain_text",
                      "text": "Branch: ${CIRCLE_BRANCH}",
                      "emoji": true
                    }
                  ]
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "plain_text",
                      "text": "Commit: ${GIT_COMMIT_MSG}",
                      "emoji": true
                    }
                  ]
                }
              ]
            }
      # - approval_notification:
      #     steps:
      #       - run:
      #           command: |
      #             if [ ! -x /bin/bash ]; then
      #               echo Bash not installed.
      #               exit 1
      #             fi
      #           name: Provide error if non-bash shell
      #       - run:
      #           command: |
      #             curl -XPOST -H "Content-type: application/json" -d "{
      #             \"attachments\": [
      #                 {
      #                   \"color\": \"#f2c744\",
      #                   \"blocks\": [
      #                       ... Blocks
      #                   ]
      #                 }
      #             ]
      #             }" $SLACK_WEBHOOK
      #             echo "Awaiting approval notified."
      #           name: Slack - Sending Approval Notification
      #           shell: /bin/bash
            
  android-build:
    working_directory: ~/project/android
    environment:
      GIT_COMMIT_MSG: git log --format=oneline -n 1 | sed -E 's/^[^ ]+ (.*)$/\1/g'
    docker:
      - image: circleci/android:api-29-node
    steps:
      - checkout:
          path: ~/project

      - attach_workspace:
          at: ~/project

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run: bundle install

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: building apk
          command: |
            bundle exec fastlane assemble_release
      - store_artifacts:
          path: app/build/outputs/apk/release
            
      - slack/notify:
          event: fail
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "\n"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":x: Android build failed!"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "\n"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "plain_text",
                      "text": "Branch: ${CIRCLE_BRANCH}",
                      "emoji": true
                    }
                  ]
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "plain_text",
                      "text": "Commit: ${GIT_COMMIT_MSG}",
                      "emoji": true
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "value": "click_me_123",
                      "style": "danger",
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }
                
      - run:
          name: Upload to Slack
          command: |
            export GIT_COMMIT_DESC=$(git log --format=oneline -n 1 | sed -E 's/^[^ ]+ (.*)$/\1/g')
            curl -F file=@app/build/outputs/apk/release/app-release.apk -F channels=$SLACK_CHANNEL -F token=$SLACK_ACCESS_TOKEN -F title="${CIRCLE_BRANCH} | ${GIT_COMMIT_DESC}"  https://slack.com/api/files.upload

workflows:
  node-android:
    jobs:
      - node
      - android-build:
          requires:
            - node